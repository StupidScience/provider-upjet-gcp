// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1beta1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ServicePerimeterDryRunResourceInitParameters struct {

	// The name of the Service Perimeter to add this resource to.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/accesscontextmanager/v1beta2.ServicePerimeter
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractParamPath("name",false)
	PerimeterName *string `json:"perimeterName,omitempty" tf:"perimeter_name,omitempty"`

	// Reference to a ServicePerimeter in accesscontextmanager to populate perimeterName.
	// +kubebuilder:validation:Optional
	PerimeterNameRef *v1.Reference `json:"perimeterNameRef,omitempty" tf:"-"`

	// Selector for a ServicePerimeter in accesscontextmanager to populate perimeterName.
	// +kubebuilder:validation:Optional
	PerimeterNameSelector *v1.Selector `json:"perimeterNameSelector,omitempty" tf:"-"`

	// A GCP resource that is inside of the service perimeter.
	// Currently only projects are allowed.
	// Format: projects/{project_number}
	Resource *string `json:"resource,omitempty" tf:"resource,omitempty"`
}

type ServicePerimeterDryRunResourceObservation struct {

	// an identifier for the resource with format {{perimeter_name}}/{{resource}}
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The name of the Service Perimeter to add this resource to.
	PerimeterName *string `json:"perimeterName,omitempty" tf:"perimeter_name,omitempty"`

	// A GCP resource that is inside of the service perimeter.
	// Currently only projects are allowed.
	// Format: projects/{project_number}
	Resource *string `json:"resource,omitempty" tf:"resource,omitempty"`
}

type ServicePerimeterDryRunResourceParameters struct {

	// The name of the Service Perimeter to add this resource to.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/accesscontextmanager/v1beta2.ServicePerimeter
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractParamPath("name",false)
	// +kubebuilder:validation:Optional
	PerimeterName *string `json:"perimeterName,omitempty" tf:"perimeter_name,omitempty"`

	// Reference to a ServicePerimeter in accesscontextmanager to populate perimeterName.
	// +kubebuilder:validation:Optional
	PerimeterNameRef *v1.Reference `json:"perimeterNameRef,omitempty" tf:"-"`

	// Selector for a ServicePerimeter in accesscontextmanager to populate perimeterName.
	// +kubebuilder:validation:Optional
	PerimeterNameSelector *v1.Selector `json:"perimeterNameSelector,omitempty" tf:"-"`

	// A GCP resource that is inside of the service perimeter.
	// Currently only projects are allowed.
	// Format: projects/{project_number}
	// +kubebuilder:validation:Optional
	Resource *string `json:"resource,omitempty" tf:"resource,omitempty"`
}

// ServicePerimeterDryRunResourceSpec defines the desired state of ServicePerimeterDryRunResource
type ServicePerimeterDryRunResourceSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     ServicePerimeterDryRunResourceParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider ServicePerimeterDryRunResourceInitParameters `json:"initProvider,omitempty"`
}

// ServicePerimeterDryRunResourceStatus defines the observed state of ServicePerimeterDryRunResource.
type ServicePerimeterDryRunResourceStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ServicePerimeterDryRunResourceObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// ServicePerimeterDryRunResource is the Schema for the ServicePerimeterDryRunResources API. Allows configuring a single GCP resource that should be inside of the 'spec' block of a dry run service perimeter.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,gcp}
type ServicePerimeterDryRunResource struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.resource) || (has(self.initProvider) && has(self.initProvider.resource))",message="spec.forProvider.resource is a required parameter"
	Spec   ServicePerimeterDryRunResourceSpec   `json:"spec"`
	Status ServicePerimeterDryRunResourceStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ServicePerimeterDryRunResourceList contains a list of ServicePerimeterDryRunResources
type ServicePerimeterDryRunResourceList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ServicePerimeterDryRunResource `json:"items"`
}

// Repository type metadata.
var (
	ServicePerimeterDryRunResource_Kind             = "ServicePerimeterDryRunResource"
	ServicePerimeterDryRunResource_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: ServicePerimeterDryRunResource_Kind}.String()
	ServicePerimeterDryRunResource_KindAPIVersion   = ServicePerimeterDryRunResource_Kind + "." + CRDGroupVersion.String()
	ServicePerimeterDryRunResource_GroupVersionKind = CRDGroupVersion.WithKind(ServicePerimeterDryRunResource_Kind)
)

func init() {
	SchemeBuilder.Register(&ServicePerimeterDryRunResource{}, &ServicePerimeterDryRunResourceList{})
}
